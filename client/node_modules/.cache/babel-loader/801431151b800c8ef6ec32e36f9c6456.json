{"ast":null,"code":"import _classCallCheck from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/jack/project/twitter-demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jack/project/twitter-demo/client/src/components/search/search.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery LaunchesQuery{ \\n    launches {\\n    id\\n    text\\n    favourited\\n    user {\\n        name\\n      }\\n    }\\n }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport './search.css';\nimport gql from 'graphql-tag';\nimport graphql from 'graphql';\nimport { Query } from 'react-apollo';\nvar newQ = graphql(gql(_templateObject()));\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.inputChange = function (e) {\n      _this.setState({\n        searchText: e.target.value\n      });\n    };\n\n    _this.search = function () {\n      //fetch(`/api/twitter)\n      fetch(\"/graphql?key=\".concat(_this.state.searchText)).then(function (res) {\n        return console.log(res);\n      }); //.then(tweet => this.setState({tweets: tweet}, () => console.log('Customers fetched...', tweet)));\n    };\n\n    _this.keyword = function () {\n      fetch(\"/api/search?key=\".concat(_this.state.searchText)).then(function (res) {\n        return res.json();\n      }).then(function (tweet) {\n        return _this.setState({\n          tweets: tweet.statuses\n        }, function () {\n          return console.log('Customers fetched...', tweet);\n        });\n      });\n    };\n\n    _this.like = function (e) {\n      fetch(\"/api/like?key=\".concat(e)).then(function (res) {\n        return res.json();\n      }).then(function (like) {\n        return _this.setState({\n          like: _this.state.like.concat([like.id])\n        }, function () {\n          return console.log('Customers fetched...', like);\n        });\n      });\n    };\n\n    _this.values = null;\n\n    _this.query = function () {\n      console.log(_this.newQ);\n    };\n\n    _this.state = {\n      tweets: [],\n      searchText: null,\n      like: []\n    };\n    var _this$props = _this.props,\n        smallText = _this$props.smallText,\n        func = _this$props.func;\n    _this.smallText = smallText ? smallText : \"Use Twitter user/handle name to capture tweets\";\n    _this.call = func;\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Search Twitter\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.smallText), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.inputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.call === 'keyword' ? this.keyword : this.query,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.tweets.length > 0 && this.call !== 'keyword' ? this.state.tweets[0].user.name : null), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.tweets.map(function (el) {\n        var check = _this2.state.like.includes(el.id);\n\n        var fav = el.favorited;\n        return React.createElement(\"li\", {\n          key: el.id,\n          className: check || fav ? 'liked' : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, el.text, !(check || fav) ? React.createElement(\"button\", {\n          className: \"like-btn\",\n          onClick: _this2.like.bind(_this2, el.id_str),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Like\") : null);\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/jack/project/twitter-demo/client/src/components/search/search.js"],"names":["React","Component","gql","graphql","Query","newQ","Search","props","inputChange","e","setState","searchText","target","value","search","fetch","state","then","res","console","log","keyword","json","tweet","tweets","statuses","like","concat","id","values","query","smallText","func","call","length","user","name","map","el","check","includes","fav","favorited","text","bind","id_str"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './search.css';\nimport gql from 'graphql-tag';\nimport graphql from 'graphql';\nimport {Query} from 'react-apollo';\n\nconst newQ  = graphql(gql`\nquery LaunchesQuery{ \n    launches {\n    id\n    text\n    favourited\n    user {\n        name\n      }\n    }\n }\n`);\n\nclass Search extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      tweets: [],\n      searchText:null,\n      like:[]\n    };  \n    let {smallText,func} = this.props \n    this.smallText=(smallText)?smallText:`Use Twitter user/handle name to capture tweets`;\n    this.call=func;\n  }\n  \n  \n  inputChange=(e)=>{\n    this.setState({searchText:e.target.value})\n  }\n\n  search = ()=>{\n    //fetch(`/api/twitter)\n    fetch(`/graphql?key=${this.state.searchText}`)\n      .then(res =>  console.log(res))\n      //.then(tweet => this.setState({tweets: tweet}, () => console.log('Customers fetched...', tweet)));\n  } \n\n  keyword = ()=>{\n    fetch(`/api/search?key=${this.state.searchText}`)\n    .then(res => res.json())\n    .then(tweet => this.setState({tweets: tweet.statuses}, () => console.log('Customers fetched...', tweet)));\n  }\n  \n  like = (e)=>{\n    fetch(`/api/like?key=${e}`)\n    .then(res => res.json())\n    .then(like => this.setState({like:this.state.like.concat([like.id])}, () => console.log('Customers fetched...', like)));\n  }\n  values=null\n  query = ()=>{\n   console.log(this.newQ)\n  }\n  \n\n  render() {\n    return (\n      <div>\n        <h1>Search Twitter</h1>\n        \n          <small>{this.smallText}</small>\n          <div>\n            <input type='text' onChange={this.inputChange}/>\n            <button onClick={(this.call==='keyword')?this.keyword:this.query}>Search</button>\n          </div>\n          <h3>{(this.state.tweets.length>0 && this.call!=='keyword')?this.state.tweets[0].user.name:null}</h3>\n          <ul>\n            {this.state.tweets.map(el => {\n              let check = this.state.like.includes(el.id);\n              let fav = el.favorited\n            \n              \n              return <li key={el.id} className={(check||fav)?'liked':null}>\n                        {el.text}\n                        {(!(check||fav))?<button className='like-btn' onClick={this.like.bind(this,el.id_str)}>Like</button>\n                        :null}\n                      </li>\n            }\n              \n            )}\n\n          </ul>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}